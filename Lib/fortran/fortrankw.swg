/* -------------------------------------------------------------------------
 * fortrankw.swg
 * ------------------------------------------------------------------------- */

#ifdef __cplusplus
%define %fortran_operator(FSYMNAME, GENERIC_SPEC, OPERATOR)
%rename(FSYMNAME) OPERATOR;
%feature("fortran:generic", GENERIC_SPEC) OPERATOR;
%enddef

// Rename *operators* to *generics*
%fortran_operator(op_add__,    "operator(+)",        *::operator+)
%fortran_operator(op_sub__,    "operator(-)",        *::operator-)
%fortran_operator(op_mul__,    "operator(*)",        *::operator*)
%fortran_operator(op_mod__,    "operator(.mod.)",    *::operator%)
%fortran_operator(op_lshift__, "operator(.lshift.)", *::operator<<)
%fortran_operator(op_rshift__, "operator(.rshift.)", *::operator>>)
%fortran_operator(op_and__,    "operator(.and.)",    *::operator&)
%fortran_operator(op_or__,     "operator(.or.)",     *::operator|)
%fortran_operator(op_xor__,    "operator(.xor.)",    *::operator^)
%fortran_operator(op_lt__,     "operator(.lt.)",     *::operator<)
%fortran_operator(op_le__,     "operator(.le.)",     *::operator<=)
%fortran_operator(op_gt__,     "operator(.gt.)",     *::operator>)
%fortran_operator(op_ge__,     "operator(.ge.)",     *::operator>=)
%fortran_operator(op_eq__,     "operator(.eq.)",     *::operator==)
%fortran_operator(op_ne__,     "operator(.ne.)",     *::operator!=)
%fortran_operator(op_ptr__,    "operator(.ptr.)",    *::operator->)
%fortran_operator(op_deref__,  "operator(.deref.)",  *::operator*())

// Do *not* rename assignment by default
// %fortran_operator(op_assign__, "assignment(=)",      *::operator=)

/* Rename member functions that conflict with our special ones */
%keywordwarn("'release' is reserved for SWIG destructors",
             rename="release_") "*::release";

#ifdef %fortransubroutine
/* Always treat return values from assignment as optional, since it's usually
 * idiomatic to `return *this;` as a reference that is often ignored by the
 * calling code. Making the function a subroutine means being able to use "call" 
 * instead of having to capture the result into a dummy variable.
 */
%fortransubroutine *::operator=;
#endif
#endif

/* However, it's bad to override some common intrinsic functions that will be
 * generated in the f90 module: e.g. naming your module 'kind' will prevent the
 * actual 'kind' intrinsic from being used in that module (it will give an
 * error).
 */
/* However, we may want to warn about overriding intrinsic functions,
 * though some versions of GCC will emit a compiler warning on top of that.
 *
 * These are *DISABLED BY DEFAULT* via the "EXTRA_WARNINGS" in main.cxx.
 * To enable them, run SWIG with '-Wextra' or '-w+321'
 *
 * Since there's significant overhead in checking all these names against
 * every identifier, and the warnings aren't enabled by
 * default, we disable checking. You can re-enable by defining 
 * FORTRAN_WARN_INTRINSICS.
 */
#ifdef FORTRAN_WARN_INTRINSICS
#define FORTRANFN(x) %namewarn(%warningmsg(SWIGWARN_PARSE_BUILTIN_NAME, "'" `x` "' may shadow a Fortran intrinsic"), sourcefmt="%(lower)s", %$isfunction, %$not %$ismember) `x`;
#else
#define FORTRANFN(x)
#endif

FORTRANFN(kind)
FORTRANFN(c_f_pointer)
FORTRANFN(c_loc)
FORTRANFN(len)

/* This list of intrinsic procedures is from
 * https://gcc.gnu.org/onlinedocs/gfortran/Intrinsic-Procedures.html
 */
FORTRANFN(abort)
FORTRANFN(abs)
FORTRANFN(access)
FORTRANFN(achar)
FORTRANFN(acos)
FORTRANFN(acosd)
FORTRANFN(acosh)
FORTRANFN(adjustl)
FORTRANFN(adjustr)
FORTRANFN(aimag)
FORTRANFN(aint)
FORTRANFN(alarm)
FORTRANFN(all)
FORTRANFN(allocated)
FORTRANFN(and)
FORTRANFN(anint)
FORTRANFN(any)
FORTRANFN(asin)
FORTRANFN(asind)
FORTRANFN(asinh)
FORTRANFN(associated)
FORTRANFN(atan)
FORTRANFN(atand)
FORTRANFN(atan2)
FORTRANFN(atan2d)
FORTRANFN(atanh)
FORTRANFN(atomic_add)
FORTRANFN(atomic_and)
FORTRANFN(atomic_cas)
FORTRANFN(atomic_define)
FORTRANFN(atomic_fetch_add)
FORTRANFN(atomic_fetch_and)
FORTRANFN(atomic_fetch_or)
FORTRANFN(atomic_fetch_xor)
FORTRANFN(atomic_or)
FORTRANFN(atomic_ref)
FORTRANFN(atomic_xor)
FORTRANFN(backtrace)
FORTRANFN(bessel_j0)
FORTRANFN(bessel_j1)
FORTRANFN(bessel_jn)
FORTRANFN(bessel_y0)
FORTRANFN(bessel_y1)
FORTRANFN(bessel_yn)
FORTRANFN(bge)
FORTRANFN(bgt)
FORTRANFN(bit_size)
FORTRANFN(ble)
FORTRANFN(blt)
FORTRANFN(btest)
FORTRANFN(c_associated)
FORTRANFN(c_f_procpointer)
FORTRANFN(c_funloc)
FORTRANFN(c_sizeof)
FORTRANFN(ceiling)
FORTRANFN(char)
FORTRANFN(chdir)
FORTRANFN(chmod)
FORTRANFN(cmplx)
FORTRANFN(co_broadcast)
FORTRANFN(co_max)
FORTRANFN(co_min)
FORTRANFN(co_reduce)
FORTRANFN(co_sum)
FORTRANFN(command_argument_count)
FORTRANFN(compiler_options)
FORTRANFN(compiler_version)
FORTRANFN(complex)
FORTRANFN(conjg)
FORTRANFN(cos)
FORTRANFN(cosd)
FORTRANFN(cosh)
FORTRANFN(cotan)
FORTRANFN(cotand)
FORTRANFN(count)
FORTRANFN(cpu_time)
FORTRANFN(cshift)
FORTRANFN(ctime)
FORTRANFN(date_and_time)
FORTRANFN(dble)
FORTRANFN(dcmplx)
FORTRANFN(digits)
FORTRANFN(dim)
FORTRANFN(dot_product)
FORTRANFN(dprod)
FORTRANFN(dreal)
FORTRANFN(dshiftl)
FORTRANFN(dshiftr)
FORTRANFN(dtime)
FORTRANFN(eoshift)
FORTRANFN(epsilon)
FORTRANFN(erf)
FORTRANFN(erfc)
FORTRANFN(erfc_scaled)
FORTRANFN(etime)
FORTRANFN(event_query)
FORTRANFN(execute_command_line)
FORTRANFN(exit)
FORTRANFN(exp)
FORTRANFN(exponent)
FORTRANFN(extends_type_of)
FORTRANFN(fdate)
FORTRANFN(fget)
FORTRANFN(fgetc)
FORTRANFN(floor)
FORTRANFN(flush)
FORTRANFN(fnum)
FORTRANFN(fput)
FORTRANFN(fputc)
FORTRANFN(fraction)
FORTRANFN(free)
FORTRANFN(fseek)
FORTRANFN(fstat)
FORTRANFN(ftell)
FORTRANFN(gamma)
FORTRANFN(gerror)
FORTRANFN(getarg)
FORTRANFN(get_command)
FORTRANFN(get_command_argument)
FORTRANFN(getcwd)
FORTRANFN(getenv)
FORTRANFN(get_environment_variable)
FORTRANFN(getgid)
FORTRANFN(getlog)
FORTRANFN(getpid)
FORTRANFN(getuid)
FORTRANFN(gmtime)
FORTRANFN(hostnm)
FORTRANFN(huge)
FORTRANFN(hypot)
FORTRANFN(iachar)
FORTRANFN(iall)
FORTRANFN(iand)
FORTRANFN(iany)
FORTRANFN(iargc)
FORTRANFN(ibclr)
FORTRANFN(ibits)
FORTRANFN(ibset)
FORTRANFN(ichar)
FORTRANFN(idate)
FORTRANFN(ieor)
FORTRANFN(ierrno)
FORTRANFN(image_index)
FORTRANFN(index)
FORTRANFN(int)
FORTRANFN(int2)
FORTRANFN(int8)
FORTRANFN(ior)
FORTRANFN(iparity)
FORTRANFN(irand)
FORTRANFN(is_iostat_end)
FORTRANFN(is_iostat_eor)
FORTRANFN(isatty)
FORTRANFN(ishft)
FORTRANFN(ishftc)
FORTRANFN(isnan)
FORTRANFN(itime)
FORTRANFN(kill)
FORTRANFN(lbound)
FORTRANFN(lcobound)
FORTRANFN(leadz)
FORTRANFN(len_trim)
FORTRANFN(lge)
FORTRANFN(lgt)
FORTRANFN(link)
FORTRANFN(lle)
FORTRANFN(llt)
FORTRANFN(lnblnk)
FORTRANFN(loc)
FORTRANFN(log)
FORTRANFN(log10)
FORTRANFN(log_gamma)
FORTRANFN(logical)
FORTRANFN(long)
FORTRANFN(lshift)
FORTRANFN(lstat)
FORTRANFN(ltime)
FORTRANFN(malloc)
FORTRANFN(maskl)
FORTRANFN(maskr)
FORTRANFN(matmul)
FORTRANFN(max)
FORTRANFN(maxexponent)
FORTRANFN(maxloc)
FORTRANFN(maxval)
FORTRANFN(mclock)
FORTRANFN(mclock8)
FORTRANFN(merge)
FORTRANFN(merge_bits)
FORTRANFN(min)
FORTRANFN(minexponent)
FORTRANFN(minloc)
FORTRANFN(minval)
FORTRANFN(mod)
FORTRANFN(modulo)
FORTRANFN(move_alloc)
FORTRANFN(mvbits)
FORTRANFN(nearest)
FORTRANFN(new_line)
FORTRANFN(nint)
FORTRANFN(norm2)
FORTRANFN(not)
FORTRANFN(null)
FORTRANFN(num_images)
FORTRANFN(or)
FORTRANFN(pack)
FORTRANFN(parity)
FORTRANFN(perror)
FORTRANFN(popcnt)
FORTRANFN(poppar)
FORTRANFN(precision)
FORTRANFN(present)
FORTRANFN(product)
FORTRANFN(radix)
FORTRANFN(ran)
FORTRANFN(rand)
FORTRANFN(random_number)
FORTRANFN(random_seed)
FORTRANFN(range)
FORTRANFN(rank )
FORTRANFN(real)
FORTRANFN(rename)
FORTRANFN(repeat)
FORTRANFN(reshape)
FORTRANFN(rrspacing)
FORTRANFN(rshift)
FORTRANFN(same_type_as)
FORTRANFN(scale)
FORTRANFN(scan)
FORTRANFN(secnds)
FORTRANFN(second)
FORTRANFN(selected_char_kind)
FORTRANFN(selected_int_kind)
FORTRANFN(selected_real_kind)
FORTRANFN(set_exponent)
FORTRANFN(shape)
FORTRANFN(shifta)
FORTRANFN(shiftl)
FORTRANFN(shiftr)
FORTRANFN(sign)
FORTRANFN(signal)
FORTRANFN(sin)
FORTRANFN(sind)
FORTRANFN(sinh)
FORTRANFN(size)
FORTRANFN(sizeof)
FORTRANFN(sleep)
FORTRANFN(spacing)
FORTRANFN(spread)
FORTRANFN(sqrt)
FORTRANFN(srand)
FORTRANFN(stat)
FORTRANFN(storage_size)
FORTRANFN(sum)
FORTRANFN(symlnk)
FORTRANFN(system)
FORTRANFN(system_clock)
FORTRANFN(tan)
FORTRANFN(tand)
FORTRANFN(tanh)
FORTRANFN(this_image)
FORTRANFN(time)
FORTRANFN(time8)
FORTRANFN(tiny)
FORTRANFN(trailz)
FORTRANFN(transfer)
FORTRANFN(transpose)
FORTRANFN(trim)
FORTRANFN(ttynam)
FORTRANFN(ubound)
FORTRANFN(ucobound)
FORTRANFN(umask)
FORTRANFN(unlink)
FORTRANFN(unpack)
FORTRANFN(verify)
FORTRANFN(xor)

#undef FORTRANFN


